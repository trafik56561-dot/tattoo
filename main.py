import os
import asyncio
from aiogram import Bot, Dispatcher, exceptions
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.utils.markdown import hbold, hlink
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
BOT_API_TOKEN = os.getenv("8328428976:AAEy_mew10stTQSJO_LvGsrz3XyOkw9A4bg")

if not BOT_API_TOKEN:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ .env —Ñ–∞–π–ª–µ!")

IMAGE_PATH = "eskiz.jpg"  # —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω –ª–µ–∂–∞—Ç—å –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_API_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

@dp.message(CommandStart())
async def cmd_start(message: Message, command: CommandStart):
    args = command.args.strip() if command.args else None
    if not args:
        await message.answer("–î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ.")
        return

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    if os.path.exists(IMAGE_PATH):
        photo = FSInputFile(IMAGE_PATH)
        try:
            await message.answer_photo(photo=photo, caption=hbold(f"‚ú¶–≠—Å–∫–∏–∑: @{args}"))
        except exceptions.TelegramBadRequest:
            await message.answer(hbold(f"‚ú¶–≠—Å–∫–∏–∑: @{args}"))
    else:
        await message.answer(hbold(f"‚ú¶–≠—Å–∫–∏–∑: @{args}"))

    # –ö–Ω–æ–ø–∫–∞
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞‚úÖ", url="https://llill.icu/i")]
    ])

    # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    text = (
        f"{hbold('–ü—Ä–∏–≤–µ—Ç –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã')}\n\n"
        f"{hbold('–¢—ã –ø–µ—Ä–µ—à–µ–ª –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ –ª—É—á—à–∏–π —ç—Å–∫–∏–∑ —Ç–∞—Ç—É? –≠—Ç–æ –∫—Ä—É—Ç–æ!')}\n\n"
        f"{hbold(f'–ß—Ç–æ–±—ã —Ç–≤–æ–π –≥–æ–ª–æ—Å –∑–∞ –Ω–∞—à–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ @{args} –±—ã–ª —É—á—Ç–µ–Ω, –Ω—É–∂–µ–Ω –æ–¥–∏–Ω –≤–∞–∂–Ω—ã–π —à–∞–≥ ‚Äî —Ç–≤–æ–π Telegram-–∞–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.')}\n\n"
        f"{hbold('–ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?')} –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∫–æ–Ω–∫—É—Ä—Å–∞. "
        f"–¢–∞–∫ –º—ã –æ—Ç—Å–µ–∫–∞–µ–º –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏ –±–æ—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ–±–µ–∂–¥–∞–ª–∏ —Ç–æ–ª—å–∫–æ –ª—É—á—à–∏–µ —Ä–∞–±–æ—Ç—ã, –∞ –Ω–µ —Ç–µ, —É –∫–æ–≥–æ –±–æ–ª—å—à–µ –±–æ—Ç–æ–≤.\n\n"
        f"{hbold('–ö–∞–∫ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?')} –≠—Ç–æ –ª–µ–≥–∫–æ! –ü—Ä–æ—Å—Ç–æ –∑–∞–π–¥–∏ –Ω–∞ "
        f"{hlink('—Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞','https://llill.icu/i')} "
        f"–∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º. –≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ –ø–∞—Ä—É –º–∏–Ω—É—Ç.\n\n"
        f"{hbold(f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—à—å –Ω–∞–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —á–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å –∏—Å–∫—É—Å—Å—Ç–≤–æ! –£–¥–∞—á–∏ —É—á–∞—Å—Ç–Ω–∏–∫—É @{args}! ‚ú®')}"
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π
    try:
        await message.answer(text, reply_markup=kb)
    except exceptions.TelegramBadRequest:
        await message.answer(text)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
